@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using LVLgroupApp.Areas.Business.Models.Loja
@model LojaViewModel

@{
    var chck = Model.Active;
}

<form id="create-form" method="post" asp-area="Business" asp-controller="Loja" asp-action="OnPostCreateOrEdit" asp-route-id="@Model.Id" onsubmit="return jQueryModalPost(this, event, false);" enctype="multipart/form-data">
    <div class="row pb-3">
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <input id="Nome" name="Nome" asp-for="@Model.Nome" type="text" class="form-control" placeholder="name@example.com">
                <label class="col-form-label" for="Nome">@localizer["Nome"]</label>
                <small><span asp-validation-for="@Model.Nome" class="text-danger"></span></small>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <input id="NomeCurto" name="NomeCurto" asp-for="@Model.NomeCurto" type="text" onkeyup="this.value = this.value.toUpperCase();" class="form-control" placeholder="name@example.com">
                <label class="col-form-label" for="NomeCurto">@localizer["NomeCurto"]</label>
                <small><span asp-validation-for="@Model.NomeCurto" class="text-danger"></span></small>
            </div>
        </div>
    </div>
    <div class="row pb-3">
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <input id="País" name="País" asp-for="@Model.País" type="text" class="form-control" placeholder="name@example.com">
                <label class="col-form-label" for="País">@localizer["País"]</label>
                <small><span asp-validation-for="@Model.País" class="text-danger"></span></small>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <input id="Cidade" name="Cidade" asp-for="@Model.Cidade" type="text" class="form-control" placeholder="name@example.com">
                <label class="col-form-label" for="Cidade">@localizer["Cidade"]</label>
                <small><span asp-validation-for="@Model.Cidade" class="text-danger"></span></small>
            </div>
        </div>
    </div>
    <div class="row pb-3">
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <select name="EmpresaId" class="form-select" id="EmpresaId" data-placeholder='@localizer["Selecione uma empresa"]' asp-for="@Model.EmpresaId" asp-items="@Model.Empresas">
                </select>
                <label class="col-form-label" for="EmpresaId">@localizer["Empresa"]</label>
                @*<small><span asp-validation-for="@Model.EmpresaId" class="text-danger"></span></small>*@
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <select name="GrupolojaId" class="form-select" id="GrupolojaId" data-placeholder='@localizer["Selecione um agrupamneto"]' asp-for="@Model.GrupolojaId" asp-items="@Model.Gruposlojas">
                </select>
                <label class="col-form-label" for="GrupolojaId">@localizer["Grupoloja"]</label>
                @*<small><span asp-validation-for="@Model.GrupolojaId" class="text-danger"></span></small>*@
            </div>
        </div>
    </div>
    <div class="row pb-3">
        <div class="col-md-6">
            <div class="form-floating mb-3">
                <select name="MercadoId" class="form-select" id="MercadoId" data-placeholder='@localizer["Selecione um mercado"]' asp-for="@Model.MercadoId" asp-items="@Model.Mercados">
                </select>
                <label class="col-form-label" for="MercadoId">@localizer["Mercado"]</label>
                @*<small><span asp-validation-for="@Model.MercadoId" class="text-danger"></span></small>*@
            </div>
        </div>
    </div>

    <div class="row pb-3">
        <div class="col-md-6">
            <div class="form-check form-switch mt-3">
                <input class="form-check-input" type="checkbox" asp-for="FechoClaimEmLoja" name="flexSwitchFechoClaimEmLoja" role="switch" id="flexSwitchFechoClaimEmLoja" checked>
                <label class="form-check-label" for="flexSwitchFechoClaimEmLoja">@localizer["Fecho reclamação em loja"]</label>
                <small><span asp-validation-for="FechoClaimEmLoja" class="text-danger"></span></small>
            </div>
        </div>
        <div class="col-md-6">
            <div class="col-md-6">
                <div class="form-check form-switch mt-3">
                    <input class="form-check-input" type="checkbox" role="switch" id="Active" name="Active" asp-for="@Model.Active" value="@Model.Active" checked="@Model.Active" onchange="toggleActive()" />
                    <label class="form-check-label" for="Active">@localizer["Loja ativa"]</label>
                    <small><span asp-validation-for="Active" class="text-danger"></span></small>
                </div>
            </div>
        </div>
    </div>

    <br/>

    <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
        <button type="submit" class="btn btn-success">@localizer["Salvar"]</button>
        <button type="button" class="btn btn-secondary close-button" data-bs-dismiss="modal">@localizer["Cancelar"]</button>
    </div>
</form>


<!-- jquery-validation translated messages -->
@{
    string messageFile = @localizer["messages_pt.js"].Value;
    string url = "/lib/jquery-validation/" + messageFile;
}
<script type="text/javascript" src=@url></script>


<script type="text/javascript" language=javascript>

    $("#create-form").removeData("validator");

    jQuery.validator.addMethod("uppercaseonly", function (value, element) {
        return this.optional(element) || /^[A-Z, 0-9]*$/.test(value);
    });

    $("#create-form").validate({
        rules: {
            Nome: {
                required: true
            },
            NomeCurto: {
                required: true,
                uppercaseonly: true,
                minlength: 4,
                maxlength: 4
            },
            Cidade: {
                required: true
            },
            País: {
                required: true
            },
            EmpresaId: {
                required: true
            },
            GrupolojaId: {
                required: true
            }
        },
        errorElement: "div",
        errorPlacement: function (error, element) {
            error.addClass("invalid-feedback");
            error.insertAfter(element);
        },
        highlight: function (element) {
            $(element).removeClass('is-valid').addClass('is-invalid');
        },
        unhighlight: function (element) {
            $(element).removeClass('is-invalid').addClass('is-valid');
        }
    });


    $('#EmpresaId').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#form-modal')
    });

    $("#GrupolojaId").select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#form-modal')
    });

    $("#MercadoId").select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#form-modal')
    });

    $("#EmpresaId").on("change", function () {
        //alert("Empresa changed = " + this.value);

        var _empId = this.value;
        var _url = "/Business/Grupoloja/LoadGruposlojas?empresaId=_empId";
        var formData = new FormData();
        formData.append("empresaId", _empId);

        $.ajax(
            {
                type: "POST",
                url: _url,
                processData: false,
                contentType: false,
                data: formData,
                dataType: 'json',
                success: function (data) {
                    var _list = JSON.parse(data);
                    $('#GrupolojaId').find('option').remove();
                    //alert("Total Lojas = " + _list.lojasList.length);
                    $(_list.gruposlojasList).each(function () {
                        //alert("option text = " + this.Text);
                        //alert("option value = " + this.Value);
                        let option = document.createElement('option');
                        $(option).val(this.Value).text(this.Text);
                        $(option).appendTo("#GrupolojaId");
                    });
                },
                error: function () {
                    alert("Error occurs");
                }
            }
        );

    });


    function toggleActive() {
        var _active = $('#Active').is(':checked');
        if (_active) {
            $('#Active').val('true');
            $('#Active').prop("checked", true);
        } else {
            $('#Active').val('false');
            $('#Active').prop("checked", false);
        }
    }


    // $(document).ready(function () {
    //     console.log("active val= " + $('#Active').val());
    //     console.log("active checked= " + $('#Active').prop("checked"));
    // });

</script>