@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using Core.Constants




<!--Tabela de Reports-->
<div class="row pt-lg-6">
    <div class="col-12">
        <table id="reportTable" class="table table-striped dt-responsive nowrap display hover" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>@localizer["Id"]</th>
                    <th>@localizer["Modelo"]</th>
                    <th>@localizer["Loja"]</th>
                    <th>@localizer["Data"]</th>
                    <th>@localizer["Autor"]</th>
                    <th>@localizer["Ações"]</th>
                </tr>
            </thead>
        </table>
    </div>
</div>










<script>

    $(document).ajaxStop(function () {
        $.busyLoadFull("hide");
    });


    $(document).ready(function () {

        $.busyLoadSetup({ fontawesome: "fa fa-spinner fa-spin fa-3x fa-fw" });


        var options = {
            isEnabled: true,
            saveState: true
        };

        var languagePath = '@Url.Content("~/lib/datatables/localizer/")';
        var languageFile = '@localizer["Portuguese.json"]';
        var _language = languagePath + languageFile;

        if ($.fn.dataTable.isDataTable('#questionTemplateTable')) {
            $('#questionTemplateTable').DataTable().clear();
            $('#questionTemplateTable').DataTable().destroy();
        }

        var table = $("#questionTemplateTable").DataTable({
            dom: "<'row'<'col-sm-12 col-md-4'B><'col-sm-12 col-md-4 mt-1'l><'col-sm-12 col-md-4 mt-1'f>>" +
                "<'row'<'col-sm-12't>>" +
                "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 mt-3'p>>",
            serverSide: true,
            stateSave: true,
            //scrollX: true,
            //scrollY: true,
            responsive: false,
            destroy: true,
            fixedHeader: {
                header: true,
                headerOffset: $('#navigationBar').height()
            },
            language: {
                url: _language
            },
            lengthMenu: [
                [20, 50, 100, 500, 1000, -1],
                [20, 50, 100, 500, 1000, '@localizer["Todos"]'],
            ],
            ajax: {
                url: "/Report/QuestionTemplate/GetQuestionTemplates",
                type: "POST",
                datatype: "json",
                data: function (d) {

                    $.busyLoadFull("show");

                    d.versionFilter = $("#VersionIndex").val();
                    d.activeFilter = $('#ActiveIndex').is(':checked');
                    d.typeFilter = $("#QuestionType").val();

                    console.log("[GetQuestionTemplates]: version = " + d.versionFilter + " Active= " + d.activeFilter + " Type= " + d.typeFilter);
                }
            },
            buttons: [
                {
                    extend: 'copy',
                    text: '<i class="fas fa-copy"></i>',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    },
                    title: '@localizer["Lista de modelos de perguntas"]'
                },
                {
                    extend: 'pdf',
                    text: '<i class="fas fa-file-pdf"></i>',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    },
                    title: '@localizer["Lista de modelos de perguntas"]',
                    customize: function (doc) {
                        doc.content.splice(1, 0, {
                            margin: [0, 0, 0, 12],
                            alignment: 'center',
                            image: 'data: image/*;base64,' + logo,
                            fit: [100, 100]
                        })
                    }
                },
                {
                    extend: 'excel',
                    text: '<i class="fas fa-file-excel"></i>',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    },
                    title: '@localizer["Lista de modelos de perguntas"]'
                },
                {
                    extend: 'print',
                    text: '<i class="fas fa-print"></i>',
                    orientation: 'landscape',
                    exportOptions: {
                        columns: ':visible'
                    },
                    title: '@localizer["Lista de modelos de perguntas"]',
                    customize: function (doc) {
                        doc.content.splice(1, 0, {
                            margin: [0, 0, 0, 12],
                            alignment: 'center',
                            image: 'data: image/*;base64,' + logo,
                            fit: [100, 100]
                        });
                    }
                },
                {
                    extend: 'colvis',
                    text: '<i class="fas fa-eye-slash"></i>'
                }
            ],
            columnDefs: [
                {
                    visible: false, targets: [0, 4, 5]
                },
                {
                    className: 'dt-body-center', targets: [2, 3, 4, 5, 6, 7]
                },
                {
                    orderable: false, targets: [2, 5, 6, 7]
                },
                {
                    orderData: [0, 3], targets: [0]
                },
                {
                    orderData: [3, 0], targets: [3]
                }
                // {
                //     orderSequence: ['desc'], targets: [0]
                // }
            ],
            order: [[0, 'desc']],
            columns: [
                { data: "id", name: "Id", autoWidth: true },
                {
                    data: "questionText",
                    name: "QuestionText",
                    render: function (data) {
                        //str = JSON.stringify(data, null, 4); // (Optional) beautiful indented output.
                        //console.log(str); // Logs output to dev tools console.
                        return "<div class='text-wrap text-break' style='width: 200px'>" + data + "</div>";
                    }
                },
                {
                    data: "questionTypeName",
                    name: "QuestionTypeName",
                    render: function (data, type, full) {
                        return `<span class="badge badge-col-1 text-xxs text-bg-warning" style="padding-top: 5px;">${data}</span>`;
                    }
                },
                {
                    data: null,
                    name: "Version",
                    render: function (data, type, row) {
                        str = JSON.stringify(data, null, 4); // (Optional) beautiful indented output.
                        console.log("status:" + str); // Logs output to dev tools console.

                        var createdat = new Date(data.createdAt);
                        var strDate = createdat.toLocaleDateString('@localizer["pt-PT"]');
                        var strVersion = '@localizer["Versão:"]' + ' ' + data.version;
                        var strSpan = "";
                         
                        if (data.isActive == true)
                        {
                            strSpan = `<span class="badge text-bg-success" style="padding-top: 5px;">@localizer["Activa"]</span>
                                       <span class="badge text-bg-secondary" style="padding-top: 5px;">${strDate}</span>`
                            ;
                        }
                        else
                        {
                            strSpan = `<span class="badge text-bg-warning" style="padding-top: 5px;">@localizer["Activa"]</span>
                                       <span class="badge text-bg-secondary" style="padding-top: 5px;">${strDate}</span>`
                            ;
                        }
                        return '<span>' + strSpan + '</span><br><h5>' + strVersion + '</h5>';
                    }
                },
                { data: "usedInReports", name: "UsedInReports", autoWidth: true },
                {
                    "data": "id",
                    "render": function (data) {
                        return `<div class="btn-group dropend">
                                        <button id="dropdown_${data}" type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            @localizer["Ação"]
                                        </button>
                                            <div class="dropdown-menu dropdown-menu-table shadow animated--grow-in" aria-labelledby="dropdown_${data}">
                                            <a class="dropdown-item" onclick="jQueryModalGet('/Report/QuestionTemplate/OnGetCreateOrEdit?id=${data}', '@localizer["Editar modelo de pergunta"]', event, 'modal-xl')"><i class="fas fa-pencil-alt"></i> @localizer["Editar"]</a>
                                            <form id="form_delete_${data}" action="/Report/QuestionTemplate/OnPostDelete?id=${data}" onsubmit="return jQueryModalDelete(this, event, '@localizer["Tem a certeza que pretende remover este modelo de pergunta?"]')">
                                                <a class="dropdown-item" href="javascript:$('#form_delete_${data}').submit();"><i class="fas fa-trash-alt"></i> @localizer["Remover"]</a>
                                            </form>
                                        </div>
                                    </div>`;
                    }
                }
            ]
        });




        $('#questionTemplateTable').on('show.bs.dropdown', function () {
            $('.dataTables_scrollBody').addClass('dropdown-visible');
            $('.dataTables_scrollHead').addClass('dropdown-visible');
        })
        .on('hide.bs.dropdown', function () {
            $('.dataTables_scrollBody').removeClass('dropdown-visible');
            $('.dataTables_scrollHead').removeClass('dropdown-visible');
        });

        $('#questionTemplateTable tbody').on('click', 'tr', function () {

            var data = table.row( $(this) ).data();
            str = JSON.stringify(data, null, 4);        // (Optional) beautiful indented output.
            console.log("row clicked: " + str);         // Logs output to dev tools console.
            
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        $('#questionTemplateTable tbody').on('dblclick', 'tr', function () {
            $(this).addClass('selected');
            var data = table.row(this).data();
            //alert('You clicked on ' + data[0] + '\'s row');
            jQueryModalGet('/report/questiontemplate/OnGetCreateOrEdit?id=' + data[0], '@localizer["Editar modelo de pergunta"]', event, 'modal-lg')
        });

        function getLVLlogo(logoName) {

            let _logoName = logoName;
            let _url = "/Claim/Foto/GetLVLlogo?logoName=_logoName";
            let formData = new FormData();
            formData.append("logoName", _logoName);

            $.ajax(
                {
                    type: "POST",
                    url: _url,
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'json',
                    success: function (data) {
                        if (data.status == "success") {
                            logo = data.logoBase64;
                            //alert(logo);
                        }
                    },
                    error: function () {
                        alert("getLVLlogo: Error occurs");
                    }
                }
            );

        };

    });

</script>





@* @foreach (var question in Model)
        {
        <tr>
            <td>
                @question.Id
            </td>
            <td>
                @question.Text
            </td>
            <td>
                <span>@localizer["Versão"] @question.Version</span>
                <br>
                <span>@question.QuestionTypeId.Name</span>
                <small>
                    @if (question.IsActive)
                    {
                        <span class="badge text-bg-success">@localizer["Ativa"]</span>
                    }
                    else
                    {
                        <span class="badge text-bg-danger">@localizer["Desativada"]</span>
                    }
                </small>
            </td>
            <td>
                @question.CreatedAt.ToShortDateString()
            </td>
            <td>
                <span class="badge text-bg-info">@question.UsedInReports</span>
            </td>
            @if ((AuthorizationService.AuthorizeAsync(User, Permissions.QuestionTemplate.Delete)).Result.Succeeded
                            || (AuthorizationService.AuthorizeAsync(User, Permissions.QuestionTemplate.Edit)).Result.Succeeded)
            {
                <td text-right">
                    <div class="btn-group dropend">
                        <button id="dropdown_@question.Id" type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @localizer["Ação"]
                        </button>
                            <ul class="dropdown-menu dropdown-menu-table shadow animated--grow-in" aria-labelledby="dropdown_@question.Id">
                            <li>
                                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.QuestionTemplate.Edit)).Result.Succeeded)
                                {
                                    <a onclick="jQueryModalGet('/report/QuestionTemplate/OnGetCreateOrEdit?id=@question.Id','@localizer["Editar pergunta"]', event, 'modal-lg')" class="dropdown-item"><i class="fas fa-pencil-alt"></i>  @localizer["Editar"]</a>
                                }
                            </li>
                            <li>
                                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.QuestionTemplate.Delete)).Result.Succeeded)
                                {
                                    <form id="form_delete_@question.Id" asp-area="Report" asp-controller="QuestionTemplate" method="post" asp-action="OnPostDelete" asp-route-id="@question.Id" onsubmit="return jQueryModalDelete(this, event, '@localizer["Tem a certeza que pretende remover esta pergunta?"]')">
                                        <a href="javascript:$('#form_delete_@question.Id').submit();" class="dropdown-item"><i class="fas fa-trash-alt"></i>  @localizer["Remover"]</a>
                                    </form>
                                }
                            </li>
                        </ul>
                    </div>
                </td>
            }
        </tr>
        }
 *@