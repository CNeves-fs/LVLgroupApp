@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using Core.Constants
@using LVLgroupApp.Areas.Claim.Models.Foto
@using LVLgroupApp.Areas.Claim.Models.Claim
@using LVLgroupApp.Helpers
@model ClaimViewModel

@{
    var dateFormat = localizer["dd/MM/yyyy"].Value;
}


@{
    var aspAction = "OnPostCreate";

    if (Model.Id == 0)
    {
        ViewData["Title"] = localizer["Criar nova reclamação"];
        ViewData["Caption"] = localizer["Prencher formulário da nova reclamação."];
    }
    else
    {
        ViewData["Title"] = localizer["Editar reclamação"];
        ViewData["Caption"] = localizer["Editar formulário da reclamação."];

        aspAction = "OnPostEdit";
    }
}


<form id="create-claim-form" method="post" asp-area="Claim" asp-controller="Claim" asp-action=@aspAction asp-route-id="@Model.Id" onsubmit="return jQueryPost(this, event);" enctype="multipart/form-data">
    
    <input type="text" id="EmailAutor" asp-for="EmailAutor" name="EmailAutor" class="form-control" hidden>
    <input type="text" id="DataClaim" asp-for="Claim.DataClaim" name="DataClaim" class="form-control" hidden>
    <input type="text" id="DataEntradaSistemaClaim" asp-for="DataEntradaSistemaClaim" name="DataEntradaSistemaClaim" class="form-control" hidden>
    <input type="text" id="DataLimite" asp-for="DataLimite" name="DataLimite" class="form-control" hidden>
    <input type="text" id="MaxDiasDecisão" asp-for="MaxDiasDecisão" name="MaxDiasDecisão" class="form-control" hidden>
    <input type="checkbox" id="FechoClaimEmLoja" asp-for="FechoClaimEmLoja" name="FechoClaimEmLoja" class="form-control" hidden>
    <input type="text" id="CodeId" asp-for="CodeId" name="CodeId" class="form-control" hidden>
    <input type="text" id="Status_Id" asp-for="Status.Id" name="Status.Id" class="form-control" hidden>
    <input type="text" id="Status_Tipo" asp-for="Status.Tipo" name="Status.Tipo" class="form-control" hidden>
    <input type="text" id="Status_Texto" asp-for="Status.Texto" name="Status.Texto" class="form-control" hidden>
    <input type="text" id="Status_Cortexto" asp-for="Status.Cortexto" name="Status.Cortexto" class="form-control" hidden>
    <input type="text" id="Status_Corfundo" asp-for="Status.Corfundo" name="Status.Corfundo" class="form-control" hidden>
    <input type="text" id="ClaimFolder_recl" asp-for="ClaimFolder" name="ClaimFolder_recl" class="form-control" hidden>
    <input type="text" id="id" asp-for="Id" name="id" class="form-control" hidden>

    <div class="card card-create-edit">

        <div class="card-header">
            <div class="row no-gutters">
                <div class="col-md-2">
                    @if (Model.Logo != null && Model.Logo.Length > 0)
                    {
                        <img class="card-img-top img-fluid" src="data:image/*;base64,@(Convert.ToBase64String(Model.Logo))">
                    }
                </div>
                <div class="col-md-10">
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                if (Model.Id > 0)
                                {
                                                <label class="float-lg-end" for="DataClaim">@localizer["Data reclamação"] : @Model.Claim.DataClaim.Date.ToString(dateFormat)</label>
                                }
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label class="float-lg-end" for="DataEntradaSistemaClaim">@localizer["Data entrada no Portal"] : @Model.DataEntradaSistemaClaim.Date.ToString(dateFormat)</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                if (Model.Id > 0)
                                {
                                                <label class="float-lg-end" for="DataLimite">@localizer["Data limite"] : @Model.DataLimite.Date.ToString(dateFormat)</label>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <label for="CodeId">@localizer["Código"] : @Model.CodeId</label>
                </div>
                <div class="col-md-6">
                    <label class="float-lg-end" for="EmailResponsável">@localizer["Responsável"] : @Model.EmailAutor</label>
                </div>
            </div>

            <div class="row pt-3">
                <div class="col-md-6">
                    @{
                        if (Model.Id > 0)
                        {
                                        <span class="badge float-lg-start" style="background-color: @Model.Status.Corfundo; color: @Model.Status.Cortexto; padding-top: 6px;">
                                            @Model.Status.Texto
                                        </span>
                        }
                    }
                </div>
                <div class="col-md-6">
                    @{
                        if (Model.Id > 0)
                        {
                            if (Model.Aprovação.DataFecho.Year > 2000)
                            {
                                            <label class="float-lg-end" for="DataClaim">@localizer["Data fecho"] : @Model.Aprovação.DataFecho.Date.ToString(dateFormat)</label>
                            }
                            else
                            {
                                            <h5>
                                                <span class="badge float-lg-end" style="background-color: @Model.Prazolimite.Corfundo; color: @Model.Prazolimite.Cortexto; padding: 8px 20px 8px 20px;">
                                                    @Model.Prazolimite.Alarme : @Model.NumeroDiasParaFecho
                                                </span>
                                            </h5>
                            }
                        }
                    }
                </div>
            </div>
        </div>

        <div class="card-body" id="card-body">
            <ul class="nav nav-tabs nav-fill" id="claimTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="Reclama-tab" data-bs-toggle="tab" data-bs-target="#Reclama-tabContent" type="button" role="tab" aria-controls="Reclama-tabContent" aria-selected="true">
                        @localizer["Reclamação"]
                        <span id="reclama-alert" class="invalid-alert" hidden>
                            <i class="bi bi-exclamation-triangle-fill" style="color:red"></i>
                        </span>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="Artigo-tab" data-bs-toggle="tab" data-bs-target="#Artigo-tabContent" type="button" role="tab" aria-controls="Artigo-tabContent" aria-selected="false">
                        @localizer["Artigo"]
                        <span id="artigo-alert" class="invalid-alert" hidden>
                            <i class="fas fa-exclamation-triangle" style="color:red"></i>
                        </span>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="Fotos-tab" data-bs-toggle="tab" data-bs-target="#Fotos-tabContent" type="button" role="tab" aria-controls="Fotos-tabContent" aria-selected="false">
                        @localizer["Fotos"]
                        <span id="fotoCounter" class="badge rounded-pill bg-danger ms-3" style="padding-bottom: 3px;">
                            <i class="fa fa-camera mr-2"></i>&nbsp;&nbsp;&nbsp;0
                        </span>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="Cliente-tab" data-bs-toggle="tab" data-bs-target="#Cliente-tabContent" type="button" role="tab" aria-controls="Cliente-tabContent" aria-selected="false">
                        @localizer["Cliente"]
                        <span id="cliente-alert" class="invalid-alert" hidden>
                            <i class="fas fa-exclamation-triangle" style="color:red"></i>
                        </span>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="Pareceres-tab" data-bs-toggle="tab" data-bs-target="#Pareceres-tabContent" type="button" role="tab" aria-controls="Pareceres-tabContent" aria-selected="false">
                        @localizer["Parecer técnico"]
                        <span id="pareceres-alert" class="invalid-alert" hidden>
                            <i class="fas fa-exclamation-triangle" style="color:red"></i>
                        </span>
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="Aprova-tab" data-bs-toggle="tab" data-bs-target="#Aprova-tabContent" type="button" role="tab" aria-controls="Aprova-tabContent" aria-selected="false">
                        @localizer["Aprovação"]
                        <span id="aprova-alert" class="invalid-alert" hidden>
                            <i class="fas fa-exclamation-triangle" style="color:red"></i>
                        </span>
                    </button>
                </li>
            </ul>
            <div class="tab-content pt-5" id="reclamaTabsContent">
                <div class="tab-pane fade show active validationGroup" id="Reclama-tabContent" role="tabpanel" aria-labelledby="Reclama-tab" tabindex="0">
                    <div id="viewClaim">
                        @await Html.PartialAsync("~/Areas/Claim/Views/Claim/_ViewTabClaim.cshtml", Model.Claim)
                    </div>
                </div>
                <div class="tab-pane fade validationGroup" id="Artigo-tabContent" role="tabpanel" aria-labelledby="Artigo-tab" tabindex="0">
                    <div id="viewArtigo">
                        @await Html.PartialAsync("~/Areas/Artigo/Views/Artigo/_ViewTabArtigo.cshtml", Model.Artigo)
                    </div>
                </div>
                <div class="tab-pane fade" id="Fotos-tabContent" role="tabpanel" aria-labelledby="Fotos-tab" tabindex="0">
                    <div id="viewFotoUploader">
                    </div>
                </div>
                <div class="tab-pane fade validationGroup" id="Cliente-tabContent" role="tabpanel" aria-labelledby="Cliente-tab" tabindex="0">
                    <div id="viewCliente">
                        @await Html.PartialAsync("~/Areas/Cliente/Views/Cliente/_ViewTabCliente.cshtml", Model.Cliente, nameof(Model.Cliente))
                    </div>
                </div>
                <div class="tab-pane fade validationGroup" id="Pareceres-tabContent" role="tabpanel" aria-labelledby="Pareceres-tab" tabindex="0">
                    <div id="viewPareceres">
                        @await Html.PartialAsync("~/Areas/Claim/Views/ParecerTécnico/_ViewTabPareceres.cshtml", Model.Pareceres)
                    </div>
                </div>
                <div class="tab-pane fade validationGroup" id="Aprova-tabContent" role="tabpanel" aria-labelledby="Aprova-tab" tabindex="0">
                    <div id="viewAprovação">
                        @await Html.PartialAsync("~/Areas/Claim/Views/Aprovação/_ViewTabAprovação.cshtml", Model.Aprovação)
                    </div>
                </div>
            </div>
        </div>

        <div class="card-footer" style="padding: 20px;">
            <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Claims.Edit)).Result.Succeeded)
                {
                    <button type="submit" id="btnSubmit" class="btn btn-success">@localizer["Salvar reclamação"]</button>
                }
                <button type="button" id="btnCancel" class="btn btn-secondary close-button">@localizer["Cancelar"]</button>
                @if (Model.Id > 0)
                {
                    <a asp-area="Claim" asp-controller="Claim" asp-action="OnGetPrintPdf" asp-route-id="@Model.Id" class="btn float-lg-end btn-primary">
                        <i class="fa fa-file-pdf"></i> @localizer["Print PDF"]
                    </a>                   
                }
            </div>
        </div>

    </div>

</form>



@section Scripts {


    <!-- jquery-validation translated messages -->
    @{
        string messageFile = @localizer["messages_pt.js"].Value;
        string url = "/lib/jquery-validation/" + messageFile;
    }
    <script src=@url type="text/javascript"></script>


    <script>


        //------------------------- functions Claim ----------------------------

        function LoadGrupolojaSelect(empId) {
            //alert("Empresa changed = " + this.value);

            var _empresaId = empId;
            var _url = "/Business/Grupoloja/LoadGruposlojas?empresaId=_empresaId";
            var formData = new FormData();
            formData.append("empresaId", _empresaId);

            $.ajax(
                {
                    type: "POST",
                    url: _url,
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'json',
                    success: function (data) {
                        var _list = JSON.parse(data);
                        $('#GrupolojaId').find('option').remove();
                        $(_list.gruposlojasList).each(function () {
                            let option = document.createElement('option');
                            $(option).val(this.Value).text(this.Text);
                            $(option).appendTo("#GrupolojaId");
                        });
                        $('#Claim_GrupolojaId').val($("#GrupolojaId").val());
                        $('#GrupolojaId').valid();

                        console.log("Claim_GrupolojaId changed to " + $('#Claim_GrupolojaId').val() );

                        LoadLojaSelect($("#GrupolojaId").val());
                    },
                    error: function () {
                        alert("Error occurs");
                    }
                }
            );
        };

        function LoadLojaSelect(grupoId) {
            //alert("Grupoloja changed = " + this.value);

            var _grupolojaId = grupoId;
            var _url = "/Business/Loja/LoadLojasInGrupoloja?grupolojaId=_grupolojaId";
            var formData = new FormData();
            formData.append("grupolojaId", _grupolojaId);

            $.ajax(
                {
                    type: "POST",
                    url: _url,
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'json',
                    success: function (data) {
                        var _list = JSON.parse(data);
                        $('#LojaId').find('option').remove();
                        $(_list.lojasList).each(function () {
                            let option = document.createElement('option');
                            $(option).val(this.Value).text(this.Text);
                            $(option).appendTo("#LojaId");
                        });
                        $('#Claim_LojaId').val( $("#LojaId").val() );
                        $('#LojaId').valid();
                        //$('#form-group-LojaId').find('.text-danger').empty();

                        console.log("Claim_LojaId changed to " + $('#Claim_LojaId').val() );

                    },
                    error: function () {
                        alert("Error occurs");
                    }
                }
            );

        };


        //------------------------- functions Artigo ----------------------------

        function UpdateArtigo(artigo) {

            //alert("artigo: " + JSON.stringify(artigo));
            $('#Artigo_ArtigoId').val(artigo.Id);

            $('#Artigo_Referencia').val(artigo.Referencia);
            $('#form-group-ArtigoId').find('.text-danger').empty();
            $('#Artigo_ArtigoId').valid();

            $('#Artigo_EmpresaId').val(artigo.EmpresaId);
            $('#Artigo_Empresa').val(artigo.Empresa);
            $('#form-group-Empresa').find('.text-danger').empty();
            $('#Artigo_Empresa').valid();

            $('#Artigo_Cor').val(artigo.Cor);
            $('#form-group-Cor').find('.text-danger').empty();
            $('#Artigo_Cor').valid();

            $('#Artigo_Pele').val(artigo.Pele);
            $('#form-group-Pele').find('.text-danger').empty();
            $('#Artigo_Pele').valid();

            $('#Artigo_Gender').val(artigo.Gender);
            $('#Artigo_GenderId').val(artigo.GenderId);
            $('#form-group-Gender').find('.text-danger').empty();
            $('#Artigo_Gender').valid();

            $('#Artigo_TamanhoId').val(artigo.TamanhoId);
            $('#form-group-Tamanho').find('.text-danger').empty();
            //$('#Artigo_TamanhoId').valid();

            //ApplyValidation();
        };

        function UpdateTamanhos(genderId, selectedId) {
            //alert("Update Tamanhos = " + genderId);

            var _gndrId = genderId;
            var _url = "/Artigo/Artigo/LoadTamanhos?genderId=_gndrId";
            var formData = new FormData();
            formData.append("genderId", _gndrId);

            $.ajax(
                {
                    type: "POST",
                    url: _url,
                    processData: false,
                    contentType: false,
                    data: formData,
                    dataType: 'json',
                    success: function (data) {
                        var _list = JSON.parse(data);
                        $('#Artigo_TamanhoId').find('option').remove();
                        //alert("Total Tamanhos = " + _list.tamanhosList.length);
                        $(_list.tamanhosList).each(function () {
                            //alert("option text = " + this.text);
                            //alert("option value = " + this.id);
                            let option = document.createElement('option');
                            $(option).val(this.id).text(this.text);
                            if (this.id == selectedId) $(option).attr('selected', 'selected');
                            $(option).appendTo("#Artigo_TamanhoId");
                        });
                        var data = $('#Artigo_TamanhoId').select2('data');
                        var _Id = data[0].id;
                        var _tm = data[0].text;
                        $('#Artigo_Tamanho').val(_tm);
                        $('#Artigo_TamanhoId').val(_Id);
                        $('#Artigo_TamanhoId').valid();
                    },
                    error: function () {
                        //alert("Error occurs");
                    }
                }
            );
        };

        function SetDiasApósCompra() {

            const compraVal = $('#Artigo_DataCompra').val();
            const claimVal = $('#Claim_DataClaim').val();

            // Split the string into day, month, and year parts
            const partsCompraVal = compraVal.split("-");
            const partsClaimVal = claimVal.split("-"); 

            const isEng =  ( '@localizer["pt"]' == 'en' );

            // Create a new Date object by passing the year, month (0-based), and day as arguments
            const dateCompra = isEng ? new Date(partsCompraVal[2], partsCompraVal[0] - 1, partsCompraVal[1]) : new Date(partsCompraVal[2], partsCompraVal[1] - 1, partsCompraVal[0]);
            console.log(dateCompra);

            // Create a new Date object by passing the year, month (0-based), and day as arguments
            const dateClaim = isEng ? new Date(partsClaimVal[2], partsClaimVal[0] - 1, partsClaimVal[1]) : new Date(partsClaimVal[2], partsClaimVal[1] - 1, partsClaimVal[0]);
            console.log(dateClaim);

            const timeDifference = Math.abs(dateClaim.getTime() - dateCompra.getTime());
            const daysDifference = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));
            const monthsDifference = Math.round(timeDifference / (1000 * 60 * 60 * 24 * 30));

            if (Number.isNaN(daysDifference))
            {
                $('#DiasTempoCompra').text('');
                $('#MesesTempoCompra').text('');
            }
            else
            {
                $('#DiasTempoCompra').text(daysDifference + ' ' + '@localizer["dias após compra!"]');
                $('#MesesTempoCompra').text(monthsDifference + ' ' + '@localizer["meses após compra!"]');
            }

            $("#Artigo_DataCompra").valid();

            console.log("daysDifference=" + daysDifference);
            console.log("monthsDifference=" + monthsDifference);
        };


        //------------------------- functions Fotos ----------------------------

        function UpdtPhotoCounter() {
            var span_data = "<i class='fa fa-camera mr-2'></i>&nbsp;&nbsp;&nbsp;" + $('#viewGallery').find('.card').length;
            $('#fotoCounter').html(span_data);
            if ($('#viewGallery').find('.card').length < 3) {
                $('#fotoCounter').addClass('bg-danger');
                $('#fotoCounter').removeClass('bg-success');
            }
            else {
                $('#fotoCounter').addClass('bg-success');
                $('#fotoCounter').removeClass('bg-danger');
            }
        };

        function SetEditables () {
            $.fn.editable.defaults.mode = 'popup'

            $('.fototag-editable').each(function (i, obj) {

                var _tagid = $('#hiddenFototagId_' + i).val();

                $(this).editable({
                    type: 'select',
                    send: 'always',
                    url: '/Claim/Foto/UpdateFotoInFolder',
                    params: function (params) {  //params already contain `name`, `value` and `pk`
                        var data = {};
                        data['id'] = params.pk;
                        data['claimId'] = $('#ClaimId').val();
                        data['claimFolder'] = $('#ClaimFolder').val();
                        data['descrição'] = $('#hiddenDescrição_' + i).val();
                        data['fototagId'] = params.value;
                        return data;
                    },
                    source: '/Claim/Fototag/GetListAllFototags?selectedId=' + _tagid
                });

                $(this).on('save', function (e, params) {
                    $('#hiddenFototagId_' + i).val(params.newValue);
                    alert('Fototag Saved value: ' + $('#hiddenFototagId_' + i).val());
                });

            });

            $('.desc-editable').each(function (i, obj) {

                $(this).editable({
                    type: 'textarea',
                    send: 'always',
                    url: '/Claim/Foto/UpdateFotoInFolder',
                    params: function (params) {  //params already contain `name`, `value` and `pk`
                        var data = {};
                        data['id'] = params.pk;
                        data['claimId'] = $('#ClaimId').val();
                        data['claimFolder'] = $('#ClaimFolder').val();
                        data['descrição'] = params.value;
                        data['fototagId'] = $('#hiddenFototagId_' + i).val();
                        //data['fototagId'] = $('#FototagId_' + i).attr('data-value');
                        return data;
                    },
                    title: 'Descrição'
                });

                $(this).on('save', function (e, params) {
                    $('#hiddenDescrição_' + i).val(params.newValue);
                    alert('Desc Saved value: ' + $('#hiddenDescrição_' + i).val());
                });

            });

            $('.btnDelete').each(function (i, obj) {

                $(this).on('click', function () {

                    var _fotoid = $('#hiddenFotoId_' + i).val();
                    var _folder = $('#ClaimFolder').val();
                    var _url = "/Claim/Foto/DeleteFotoInFolder?Id=" + _fotoid + '&claimFolder=' + _folder;
                    var formData = new FormData();
                    formData.append("fotoId", _fotoid);
                    formData.append("tempFolder", _folder);

                    $.ajax(
                        {
                            type: "POST",
                            url: _url,
                            processData: false,
                            contentType: false,
                            data: formData,
                            success: function (data) {
                                if (data.status == "success") {
                                    var _reclid = $('#ClaimId').val();
                                    var _folder = $('#ClaimFolder').val();
                                    $('#viewGallery').load('/claim/foto/OnGetViewGallery?claimId=' + _reclid + '&claimFolder=' + _folder, function () {
                                        var span_data = "<i class='fa fa-camera mr-2'></i>&nbsp;&nbsp;&nbsp;" + $('#viewGallery').find('.card').length;
                                        $('#fotoCounter').html(span_data);
                                        if ($('#viewGallery').find('.card').length < 3) {
                                            $('#fotoCounter').addClass('bg-danger');
                                            $('#fotoCounter').removeClass('bg-success');
                                        }
                                        else {
                                            $('#fotoCounter').addClass('bg-success');
                                            $('#fotoCounter').removeClass('bg-danger');
                                        }
                                    });
                                    alert("The photo was deleted successfully");
                                }
                            },
                            error: function () {
                                alert("Error occurs");
                            }
                        }
                    );
                });
            });
        };

        function InitImageViewer () {
            // Get all images and insert it inside the modal - use its "alt" text as a caption
            // Get the modal
            var modal = document.getElementById("ImageModal");
            var imgs = document.getElementsByClassName('viewableImage');
            var modalImg = document.getElementById("imageContent");
            var captionText = document.getElementById("caption");
            for (var i = 0, len = imgs.length; i < len; i++) {
                imgs[i].onclick = function () {
                    modal.style.display = "block";
                    modalImg.src = this.src;
                    //modalImg.style.width = 'auto';
                    modalImg.style.width = '100%';
                    modalImg.style.height = '100%';
                    //modalImg.style.marginTop = '100px';
                    captionText.innerHTML = this.alt;
                    $('#ImageModal').modal('show');
                }
            }

            // Get the <span> element that closes the modal
            var span = document.getElementsByClassName("viewableImageClose")[0];

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            };
        };

        function AddPhotoClickListeners() {
            
            // Get all images in fotoGallery
            let imgs = document.getElementsByClassName('viewableImage');

            // adicionar eventListeners
            for (var idx = 0; idx < imgs.length; i++) {

                //set img id
                imgs[idx].id = idx;

                imgs[idx].onclick = function () {
                    console.log('image clicked = ' + this.id)
                };
            }
        };

        function InitSlideShow() {

            var modalSlideShow = document.getElementById("CarouselModal");
            //var modalImage = document.getElementById("ImageModal");

            // Get all images in fotoGallery
            var imgs = document.getElementsByClassName('viewableImage');

            // Get slide-show modal container for indicators
            var indicContainer = document.getElementById("indicators-container");

            // Get slide-show modal container for items
            var itemContainer = document.getElementById("item-container");

            // Get image modal container for photo
            var modalImg = document.getElementById("imageContent");

            // adicionar imgs to slide-show and img modal
            for (var i = 0, len = imgs.length; i < len; i++) {
                //set img id
                imgs[i].id = i;

                // adicionar button indicator no slideshow
                var iButton = document.createElement('button');
                iButton.className = 'carousel-indicator';
                iButton.setAttribute('type', 'button');
                iButton.setAttribute('data-bs-target', '#carouselClaimPhotos');
                iButton.setAttribute('data-bs-slide-to', i);
                iButton.setAttribute('aria-label', 'Slide ' + (i + 1));
                iButton.id = 'indicator-' + i;
                indicContainer.appendChild(iButton);

                console.log("button added to : indicators-container");

                // adicionar img e labels ao slide-show
                var iDiv = document.createElement('div');
                iDiv.className = 'carousel-item';
                iDiv.id = 'carousel-item-' + i;
                itemContainer.appendChild(iDiv);
                var innerImg = document.createElement('img');
                innerImg.src = imgs[i].src;
                innerImg.className = 'd-block w-100';
                innerImg.id = 'carouselImage-' + i;
                var innerDiv = document.createElement('div');
                innerDiv.className = 'carousel-caption d-none d-md-block';
                innerDiv.id = 'carouselCaption-' + i;
                iDiv.appendChild(innerImg);
                console.log("innerImg appended to iDiv");
                iDiv.appendChild(innerDiv);
                console.log("innerDiv appended to iDiv");
                itemContainer.appendChild(iDiv);
                console.log("iDiv appended to itemContainer");

                // adicionar eventListener
                imgs[i].onclick = function () {
                    console.log("img id: " + this.id);
                    var ebuttons = document.querySelectorAll('.carousel-indicator');
                    var btn_length = ebuttons.length;
                    for (var i = 0; i < btn_length; i++) {
                        ebuttons[i].classList.remove('active');
                    }
                    var eItems = document.querySelectorAll('.carousel-item');
                    var item_length = eItems.length;
                    for (var i = 0; i < item_length; i++) {
                        eItems[i].classList.remove('active');
                    }
                    //set this 'active'
                    document.getElementById('indicator-' + this.id).classList.add('active');
                    document.getElementById('carousel-item-' + this.id).classList.add('active');

                    //set labels
                    var lCaptions = document.querySelectorAll('.carousel-caption');
                    var captions_length = lCaptions.length;
                    for (var i = 0; i < captions_length; i++) {
                        var title = document.getElementById('FototagId_' + i).innerHTML;
                        console.log("title: " + title);
                        var desc = document.getElementById('Descrição_' + i).innerHTML;
                        if (desc == 'Empty') desc = '...';
                        console.log("desc: " + desc);
                        lCaptions[i].innerHTML = "<h5>" + title + "</h5><p>" + desc + "</p>";
                    }

                    $('#CarouselModal').modal('show');
                }

                // Get the <span> element that closes the modal
                var span = document.getElementsByClassName("carouselClose")[0];

                // When the user clicks on <span> (x), close the modal
                span.onclick = function () {
                    modalSlideShow.style.display = "none";
                };
            }
        };

        function InitPhotoSwipe() {

        }


        //------------------------- functions Cliente ----------------------------

        function UpdateCliente(cliente) {

            //alert("cliente: " + JSON.stringify(cliente));
            $('#Cliente_Id').val(cliente.Id);

            $('#Cliente_Telefone').val(cliente.Telefone);
            $('#form-group-Id').find('.text-danger').empty();
            $('#Cliente_Id').valid();

            $('#Cliente_Nome').val(cliente.Nome);
            $('#form-group-Nome').find('.text-danger').empty();
            $('#Cliente_Nome').valid();

            $('#Cliente_Email').val(cliente.Email);
            //$('#form-group-Email').find('.text-danger').empty();
            $('#Cliente_Email').val();

            $('#Cliente_NIF').val(cliente.NIF);
            $('#Cliente_Morada').val(cliente.Morada);
            $('#Cliente_IBAN').val(cliente.IBAN);


            var setdate = new Date(cliente.DataUltimoContacto);
            if (setdate.getFullYear() == 1) {
                setdate = new Date();
            }
            const dataUltimoContacto = document.querySelector("#Cliente_DataUltimoContacto");
            const fp_dataUltimoContacto = flatpickr(dataUltimoContacto, {});  // flatpickr
            fp_dataUltimoContacto.setDate(setdate, true, '@localizer["d-m-Y"]');


            $('#Cliente_DescriçãoContacto').val(cliente.DescriçãoContacto);
            $('#Cliente_TipoContacto').val(cliente.TipoContacto);
        };

        function FormatStringTelefone(str) {
            const tlf = str.replace(/\s/g, '');
            switch (tlf.length)
            {
                case 13:
                    return tlf.substring(0, 4) + ' ' + tlf.substring(4, 7) + ' ' + tlf.substring(7, 10) + ' ' + tlf.substring(10);
                    break;
                case 12:
                    return tlf.substring(0, 3) + ' ' + tlf.substring(3, 6) + ' ' + tlf.substring(6, 9) + ' ' + tlf.substring(9);
                    break;
                case 9:
                    return tlf.substring(0, 3) + ' ' + tlf.substring(3, 6) + ' ' + tlf.substring(6);
                    break;
                default:
                    return tlf;
                    break;
            }
        };


        //------------------------- functions Aprovação ----------------------------

        function InitAprovação() {

            if ('@Model.Aprovação.Rejeitada' === 'True') {
                $("#Aprovação_Rejeitada").prop('checked', true);
                $("input[name=optradio][value='option1']").prop('checked', true);
            }
            else
            {
                $("#Aprovação_Rejeitada").prop('checked', false);
                $("input[name=optradio][value='option1']").prop('checked', false);
            }

            if ('@Model.Aprovação.TrocaArtigo' === 'True') {
                $("#Aprovação_TrocaArtigo").prop('checked', true);
                $("input[name=optradio][value='option2']").prop('checked', true);
            }
            else 
            {
                $("#Aprovação_TrocaArtigo").prop('checked', false);
                $("input[name=optradio][value='option2']").prop('checked', false);
            }

            if ('@Model.Aprovação.ReparaçãoArtigo' === 'True') {
                $("#Aprovação_ReparaçãoArtigo").prop('checked', true);
                $("input[name=optradio][value='option3']").prop('checked', true);
            }
            else 
            {
                $("#Aprovação_ReparaçãoArtigo").prop('checked', false);
                $("input[name=optradio][value='option3']").prop('checked', false);
            }

            if ('@Model.Aprovação.DevoluçãoDinheiro' === 'True') {
                $("#Aprovação_DevoluçãoDinheiro").prop('checked', true);
                $("input[name=optradio][value='option4']").prop('checked', true);
            }
            else 
            {
                $("#Aprovação_DevoluçãoDinheiro").prop('checked', false);
                $("input[name=optradio][value='option4']").prop('checked', false);
            }

            if ('@Model.Aprovação.NotaCrédito' === 'True') {
                $("#Aprovação_NotaCrédito").prop('checked', true);
                $("input[name=optradio][value='option5']").prop('checked', true);
            }
            else 
            {
                $("#Aprovação_NotaCrédito").prop('checked', false);
                $("input[name=optradio][value='option5']").prop('checked', false);
            }

        };





        $(document).ready(function () {

            
            //------------------------- Inicializar button Cancel ----------------------------


            $("#btnCancel").on('click', function () {
                console.log("EventListener : #btnCancel clicked.");

                var _folder = $('#ClaimFolder_recl').val();
                var _id = $('#id').val();

                var _url = "/Claim/Claim/OnPostCancel?id=" + _id + '&claimFolder=' + _folder;
                var formData = new FormData();
                formData.append("id", _id);
                formData.append("claimFolder", _folder);

                $.ajax(
                    {
                        type: "POST",
                        url: _url,
                        processData: false,
                        contentType: false,
                        data: formData,
                        success: function (response) {
                            // Redirect to the specified URL
                            window.location.href = response.redirectToUrl;
                        },
                        error: function () {
                            alert("Error occurs");
                        }
                    }
                );
            });





            //------------------------- Inicializar separador reclamação (_ViewTabClaim) ----------------------------


            //--- #Claim_NextStatusId -------------------------------

            $("#NextStatusId").select2({
                theme: "bootstrap-5",
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#NextStatusId").val( $('#Claim_NextStatusId').val() ).trigger('change');

            $("#NextStatusId").on("change", function () {
                console.log("NextStatusId changed to " + this.value);
                var _Id = this.value;
                $('#Claim_NextStatusId').val(this.value);
                $(this).valid();
            });


            //--- #Claim_EmpresaId -------------------------------

            $("#EmpresaId").select2({
                theme: "bootstrap-5",
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#EmpresaId").val($('#Claim_EmpresaId').val()).trigger('change');

            $("#EmpresaId").on("change", function () {
                $('#Claim_EmpresaId').val(this.value);
                $(this).valid();
                LoadGrupolojaSelect(this.value);
            });


            //--- #Claim_GrupolojaId -------------------------------

            $("#GrupolojaId").select2({
                theme: "bootstrap-5",
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#GrupolojaId").val($('#Claim_GrupolojaId').val()).trigger('change');

            $("#GrupolojaId").on("change", function () {
                $('#Claim_GrupolojaId').val(this.value);
                $(this).valid();
                LoadLojaSelect(this.value);
            });


            //--- #Claim_LojaId -------------------------------

            $("#LojaId").select2({
                theme: "bootstrap-5",
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#LojaId").val($('#Claim_LojaId').val()).trigger('change');

            $("#LojaId").on("change", function () {
                $('#Claim_LojaId').val(this.value);
                $(this).valid();
            });


            //--- #Claim_DataClaim -------------------------------

            let dataclaimpicker = $("#Claim_DataClaim").flatpickr({
                dateFormat: '@localizer["d-m-Y"]',
                maxDate: 'today',
                onClose: function (selectedDates, dateStr, instance) {
                    datacomprapicker.set('maxDate', dateStr);
                },
                locale: '@localizer["pt"]'
            });

            $('#Claim_DataClaim').on("change", function () {
                console.log("Claim_DataClaim changed to " + this.value);
                SetDiasApósCompra();
            });





            //------------------------- Inicializar separador artigo (_ViewTabArtigo) ----------------------------


            //--- #Artigo_ArtigoId -------------------------------

            $("#Artigo_ArtigoId").select2({
                theme: 'bootstrap-5',
                //dropdownParent: $('#form-modal'),
                ajax: {
                    type: 'get',
                    url: '/Artigo/Artigo/OnGetListAllArtigos',
                    contentType: "application/json; charset=utf-8",
                    delay: 250,
                    cache: true,
                    data: function (params) {
                        var query =
                        {
                            term: params.term || "",
                            page: params.page || 1
                        };
                        return query;
                    },
                    processResults: function (data, params) {

                        //str = JSON.stringify(data, null, 4); // (Optional) beautiful indented output.
                        //console.log(str); // Logs output to dev tools console.

                        //str = JSON.stringify(params, null, 4); // (Optional) beautiful indented output.
                        //console.log(str); // Logs output to dev tools console.

                        params.page = params.page || 1;
                        return {
                            results: $.map(data.results, function (item) {
                                return {
                                    id: item.id,
                                    text: item.text,
                                    selected: item.selected
                                };
                            }),
                            pagination: {
                                more: data.pagination.more // verificar se existem mais pages
                            }
                        };
                    }
                },
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#Artigo_ArtigoId").on("change", function () {
                console.log("EventListener : #Artigo_ArtigoId changed.");

                $(this).valid();
                var _Id = this.value;
                //alert("#Artigo changed to " + _Id);

                let _url = "/Artigo/Artigo/GetArtigo?artigoId=" + _Id;
                let formData = new FormData();
                formData.append("artigoId", _Id);

                $.ajax(
                    {
                        type: "POST",
                        url: _url,
                        processData: false,
                        contentType: false,
                        data: formData,
                        dataType: 'json',
                        success: function (data) {
                            var _art = JSON.parse(data);
                            UpdateArtigo(_art.artigo);
                            UpdateTamanhos(_art.artigo.GenderId);
                            //alert("UpdateArtigo terminou");
                        },
                        error: function () {
                            alert("Error occurs");
                        }
                    }
                );

            });


            //--- #Artigo_TamanhoId -------------------------------

            $('#Artigo_TamanhoId').select2({
                theme: 'bootstrap-5',
                //dropdownParent: $('#form-modal')
            });

            $("#Artigo_TamanhoId").on("change", function () {
                //console.log("EventListener : #Artigo_TamanhoId changed.");
                var data = $('#Artigo_TamanhoId').select2('data');
                //console.log("#Artigo_TamanhoId changed : " + JSON.stringify(data));

                var _Id = data[0].id;
                var _tm = data[0].text;
                $('#Artigo_Tamanho').val(_tm);
                $('#Artigo_TamanhoId').val(_Id);

                $(this).valid();
                //alert("#Tamanho changed to " + _Id + " : " + _tm);
            });


            //--- Inicializar #Artigo_DataCompra -------------------------------

            let datacomprapicker = $("#Artigo_DataCompra").flatpickr({
                dateFormat: '@localizer["d-m-Y"]',
                maxDate: $('#Claim_DataClaim').attr('value'),
                locale: '@localizer["pt"]'
            });

            $('#Artigo_DataCompra').on("change", function () {
                console.log("Artigo_DataCompra changed to " + this.value);
                SetDiasApósCompra();
            });





            //------------------------- Inicializar separador fotos (_ViewFotoUploader) ----------------------------


            //------------------------- functions ----------------------------


            $('#viewFotoUploader').load('/claim/foto/OnGetFotoUploader?claimId=@Model.Id&claimFolder=@Model.ClaimFolder', function () {
                console.log("#viewFotoUploader loaded with success.");
                var _reclid = $('#ClaimId').val();
                var _folder = $('#ClaimFolder').val();

                $('#viewGallery').load('/claim/foto/OnGetViewGallery?claimId=' + _reclid + '&claimFolder=' + _folder, function () {
                    console.log("#viewGallery loaded with success.");
                    UpdtPhotoCounter();
                    SetEditables();
                    
                    //InitImageViewer();
                    //InitSlideShow();
                    //AddPhotoClickListeners();

                    InitPhotoSwipe();

                    var input = document.getElementById("fileUpload"),
                        label = document.getElementById("labelfileUpload"),
                        span = document.getElementById("spanfileUpload"),
                        spanVal = span.innerHTML;

                    input.addEventListener('change', function (e) {
                        //alert("files to upload: " + this.files.length);
                        var fileName = '';

                        if (this.files && this.files.length > 1) {
                            //multiple files to upload
                            spanVal = this.files.length + '@localizer["ficheiros selecionados."]';
                        }
                        else {
                            //single file to upload
                            fileName = e.target.value.split('\\').pop();
                        }

                        if (fileName) {
                            span.innerHTML = fileName;
                        }
                        else {
                            span.innerHTML = spanVal;
                        }
                    });

                    $("#FototagId").select2({
                        placeholder: '@localizer["Selecione uma etiqueta"]',
                        theme: 'bootstrap-5',
                        escapeMarkup: function (m) {
                            return m;
                        }
                    });

                    $("#btnUpload").on('click', function () {
                        console.log("EventListener : #btnUpload clicked.");

                        var _reclid = $('#ClaimId').val();
                        var _folder = $('#ClaimFolder').val();
                        var _desc = $('#Desc').val();
                        var _tagid = $('#FototagId').val();
                        var _files = $('#fileUpload').prop("files");

                        if (_files.length == 0) return false;

                        var _url = "/Claim/Foto/UploadToFolder?handler=filePhoto&claimId=" + _reclid + "&claimFolder=" + _folder + "&descrição=" + _desc;
                        var formData = new FormData();

                        formData.append("claimId", _reclid);
                        formData.append("claimFolder", _folder);
                        formData.append("descrição", _desc);
                        formData.append("fototagId", _tagid);
                        formData.append("filePhoto", _files[0]);

                        $.ajax(
                            {
                                type: "POST",
                                url: _url,
                                processData: false,
                                contentType: false,
                                data: formData,
                                success: function (data) {
                                    if (data.status == "success") {
                                        $('#Descrição').val('');
                                        var $el = $('#fileUpload');
                                        $el.wrap('<form>').closest('form').get(0).reset();
                                        $el.unwrap();
                                        $('#spanfileUpload').html('@localizer["Selecionar foto"]');
                                        alert('@localizer["A foto foi carregada com sucesso"]');

                                        $('#viewGallery').load('/claim/foto/OnGetViewGallery?claimId=' + _reclid + '&claimFolder=' + _folder, function () {
                                            console.log("#viewGallery loaded with success.");
                                            UpdtPhotoCounter();
                                            SetEditables();
                                            //InitImageViewer();
                                            InitSlideShow();
                                        });
                                    }
                                },
                                error: function () {
                                    alert("Error occurs");
                                }
                            }
                        );

                    });
                });
            });





            //------------------------- Inicializar separador cliente (_ViewTabCliente) ----------------------------


            //--- #Cliente_Id -------------------------------

            $("#Cliente_Id").select2({
                theme: "bootstrap-5",
                ajax: {
                    type: 'get',
                    url: '/Cliente/Cliente/OnGetListAllClientesTelefones',
                    contentType: "application/json; charset=utf-8",
                    delay: 250,
                    cache: true,
                    data: function (params) {
                        var query =
                        {
                            term: params.term || "",
                            page: params.page || 1
                        };
                        return query;
                    },
                    processResults: function (data, params) {

                        // // str = JSON.stringify(data, null, 4); (Optional) beautiful indented output.
                        // // console.log(str); Logs output to dev tools console.
                        // // str = JSON.stringify(params, null, 4); (Optional) beautiful indented output.
                        // // console.log(str); Logs output to dev tools console.

                        params.page = params.page || 1;
                        return {
                            results: $.map(data.results, function (item) {
                                return {
                                    id: item.id,
                                    text: item.text,
                                    selected: item.selected
                                };
                            }),
                            pagination: {
                                more: data.pagination.more // verificar se existem mais pages
                            }
                        };
                    }
                },
                escapeMarkup: function (m) {
                    return m;
                }
            });

            $("#Cliente_Id").on("change", function () {

                $(this).valid();
                var _Id = this.value;
                //alert("#Telefone changed to " + _Id);

                let _url = "/Cliente/Cliente/GetCliente?clienteId=" + _Id;
                let formData = new FormData();
                formData.append("clienteId", _Id);

                $.ajax(
                    {
                        type: "POST",
                        url: _url,
                        processData: false,
                        contentType: false,
                        data: formData,
                        dataType: 'json',
                        success: function (data) {
                            var _cl = JSON.parse(data);
                            UpdateCliente(_cl.cliente);
                            //alert("UpdateCliente terminou");
                        },
                        error: function () {
                            alert("Error occurs");
                        }
                    }
                );

            });


            //--- #Cliente_DataUltimoContacto -------------------------------

            $("#Cliente_DataUltimoContacto").flatpickr({
                dateFormat: '@localizer["d-m-Y"]',
                locale: '@localizer["pt"]'
            });





            //------------------------- Inicializar separador aprovação (_ViewTabAprovação) ----------------------------


            //--- #Aprovação_Rejeitada #Aprovação_TrocaArtigo #Aprovação_ReparaçãoArtigo #Aprovação_DevoluçãoDinheiro #Aprovação_NotaCrédito -------------------------------

            $("input[name=optradio]").on("change", function () {
                //alert(this.value);
                console.log(this.value);
                if (this.value == "option1") {
                    $("#Aprovação_Rejeitada").prop('checked', true);
                    $("#Aprovação_TrocaArtigo").prop('checked', false);
                    $("#Aprovação_ReparaçãoArtigo").prop('checked', false);
                    $("#Aprovação_DevoluçãoDinheiro").prop('checked', false);
                    $("#Aprovação_NotaCrédito").prop('checked', false);
                };
                if (this.value == "option2") {
                    $("#Aprovação_Rejeitada").prop('checked', false);
                    $("#Aprovação_TrocaArtigo").prop('checked', true);
                    $("#Aprovação_ReparaçãoArtigo").prop('checked', false);
                    $("#Aprovação_DevoluçãoDinheiro").prop('checked', false);
                    $("#Aprovação_NotaCrédito").prop('checked', false);
                };
                if (this.value == "option3") {
                    $("#Aprovação_Rejeitada").prop('checked', false);
                    $("#Aprovação_TrocaArtigo").prop('checked', false);
                    $("#Aprovação_ReparaçãoArtigo").prop('checked', true);
                    $("#Aprovação_DevoluçãoDinheiro").prop('checked', false);
                    $("#Aprovação_NotaCrédito").prop('checked', false);
                };
                if (this.value == "option4") {
                    $("#Aprovação_Rejeitada").prop('checked', false);
                    $("#Aprovação_TrocaArtigo").prop('checked', false);
                    $("#Aprovação_ReparaçãoArtigo").prop('checked', false);
                    $("#Aprovação_DevoluçãoDinheiro").prop('checked', true);
                    $("#Aprovação_NotaCrédito").prop('checked', false);
                };
                if (this.value == "option5") {
                    $("#Aprovação_Rejeitada").prop('checked', false);
                    $("#Aprovação_TrocaArtigo").prop('checked', false);
                    $("#Aprovação_ReparaçãoArtigo").prop('checked', false);
                    $("#Aprovação_DevoluçãoDinheiro").prop('checked', false);
                    $("#Aprovação_NotaCrédito").prop('checked', true);
                };
            });





            //------------------------- Client validation ----------------------------



            $("#create-claim-form").removeData("validator");

            var validator = $("#create-claim-form").validate({
                rules: {
                    ignore: "#fileUpload",
                    NextStatusId: {
                        required: true
                    },
                    'Claim.DataClaim': {
                        required: true
                    },
                    'Claim.EmpresaId': {
                        required: true
                    },
                    'Claim.GrupolojaId': {
                        required: true
                    },
                    'Claim.LojaId': {
                        required: true
                    },
                    'Claim.MotivoClaim': {
                        required: true
                    },
                    'Artigo.ArtigoId': {
                        required: true
                    },
                    'Artigo.Empresa': {
                        required: true
                    },
                    'Artigo.Gender': {
                        required: true
                    },
                    'Artigo.TamanhoId': {
                        required: true
                    },
                    'Artigo.DataCompra': {
                        required: true
                    },
                    'Artigo.DefeitoDoArtigo': {
                        required: true
                    },
                    'Cliente.Id': {
                        required: true
                    },
                    'Cliente.Nome': {
                        required: true
                    },
                    'Cliente.Email': {
                        email: true
                    },
                    'Pareceres.ParecerResponsavel.Opinião': {
                        required: true
                    }
                },
                errorElement: "div",
                errorPlacement: function (error, element) {
                    error.addClass("invalid-feedback");
                    if ($(element).hasClass("form-select")) {
                        error.insertAfter($(element).parent());
                    }
                    else
                    {
                        error.insertAfter(element);
                    }
                },
                highlight: function (element) {
                    let $tab = $(element).parent().closest('.tab-pane');
                    let btnStr = $tab.attr('aria-labelledby');
                    let $btn = $('#' + btnStr);
                    let $alert = $btn.children('.invalid-alert').first();
                    $alert.removeAttr('hidden');
                    //console.log($tab.attr('aria-labelledby'));
                    //console.log($btn.attr('id'));
                    //console.log($alert.attr('id'));
                    $(element).removeClass('is-valid').addClass('is-invalid');
                },
                unhighlight: function (element) {
                    
                    $(element).removeClass('is-invalid').addClass('is-valid');

                    let $tab = $(element).parent().closest('.tab-pane');
                    let btnStr = $tab.attr('aria-labelledby');
                    let $btn = $('#' + btnStr);
                    let $alert = $btn.children('.invalid-alert').first();

                    let tabId = $tab.attr('Id');
                    console.log('Tab Id = ' + tabId);
                    let count = $('#' + tabId + ' .is-invalid').length;
                    console.log('is-invalid = ' + count)

                    if (count == 0)
                    {
                        $alert.attr('hidden', true)
                    }
                }
            });

            jQueryPost = (form, event) => {
                var isvalid = $(form).valid();
                if (!isvalid) {
                    event.preventDefault();
                    console.log("form : not submited.");
                    return false;
                }
                console.log("form : submited.");
                return true;
            };



            //------------------------- Inicializar ----------------------------


            document.getElementById('btnSubmit').addEventListener('click', function() {
                this.disabled = true
                // continuar com o submit
            });


            InitAprovação();
            SetDiasApósCompra();

            const _tamanhoId = @Model.Artigo.TamanhoId;
            const _genderId = @Model.Artigo.GenderId;
            if (@Model.Artigo.TamanhoId > 0) {
                UpdateTamanhos(_genderId, @Model.Artigo.TamanhoId);
            }

        });


    </script>

}