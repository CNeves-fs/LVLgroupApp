@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using Core.Constants
@using Core.Enums
@using LVLgroupApp.Areas.Notification.Models.Notification
@model ViewNotificationViewModel

<style>
    .targetContainer {
        max-height: 100px;
    }
    #targetUsers {
        font-size: 0.8rem;
    }
    .box {
        width: 50%;
        float: left;
    }
    .form-floating > .form-select {
        background-color: var(--bs-secondary-bg);
    }
</style>

<form id="create-form" method="post" asp-area="Notification" asp-controller="MyNotification" asp-action="OnPostCreate" asp-route-id="@Model.Id" onsubmit="return jQueryModalPost(this, event, false);" enctype="multipart/form-data">
    
    <input type="text" id="MercadoIdNot" name="MercadoId" asp-for=MercadoId class="form-control" hidden>
    <input type="text" id="EmpresaIdNot" name="EmpresaId" asp-for="EmpresaId" class="form-control" hidden>
    <input type="text" id="GrupolojaIdNot" name="GrupolojaId" asp-for="GrupolojaId" class="form-control" hidden>
    <input type="text" id="LojaIdNot" name="LojaId" asp-for="LojaId" class="form-control" hidden>
    

    <card id="card-sendnotification">
        <card-header>

            <div class="row">
                <div class="d-flex justify-content-between col-sm-6">
                    <div class="mt-3">
                        @localizer["Para:"]
                    </div>
                    <div class="targetContainer w-100 h-100 mt-3 ms-2 border border-2 border-primary rounded overflow-auto">
                        <ul id="targetUsers" class="w-100 h-100 mb-0 text-start"></ul>
                    </div>
                    <div class="flex-shrink-1 d-flex flex-column">
                        <div class="btn-group dropend mx-2 mb-1">
                            <button id="addNotificationUser" type="button" class="btn btn-primary dropdown-toggle mt-3" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                <span class="bi bi-person-fill"></span>
                            </button>
                            <div id="toUserDropDown" class="dropdown-menu dropdown-menu-end ps-3 pe-2 pt-0 pb-3">
                                <div class="row">
                                    <div class=" d-flex col-sm-12">
                                        <div class="form-floating mt-3">
                                            <select name="toUserSelect" class="form-select" id="toUserSelect" data-placeholder='@localizer["Selecione um utilizador"]'>
                                                <option value="0" selected="selected">@localizer["Selecione um utilizador"]</option>
                                            </select>
                                            <label class="col-form-label" for="toUserSelect">@localizer["Utilizador"]</label>
                                        </div>
                                        <button id="addUser" type="button" class="btn btn-primary mx-2 mt-3">
                                            <span class="bi bi-person-fill-add fs-3"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="btn-group dropend mx-2 mt-1">
                            <button id="addNotificationUserGroup" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
                                <span class="bi bi-people-fill"></span>
                            </button>
                            <div id="toUsersDropDown" class="dropdown-menu dropdown-menu-end p-3">

                                @localizer["Para:"]
                                <br />
                                <div class="container w-100 h-100 mb-3">

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckColaborador">
                                        <input type="text" class="form-control hold-value" value="@localizer["Colaboradores"]" hidden>
                                        <label class="form-check-label" for="flexCheckColaborador">
                                            @localizer["Colaboradores"]
                                        </label>
                                    </div>

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckGerenteDeLoja">
                                        <input type="text" class="form-control hold-value" value="@localizer["Gerentes de lojas"]" hidden>
                                        <label class="form-check-label" for="flexCheckGerenteDeLoja">
                                            @localizer["Gerentes de lojas"]
                                        </label>
                                    </div>

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckSupervisor">
                                        <input type="text" class="form-control hold-value" value="@localizer["Supervisores"]" hidden>
                                        <label class="form-check-label" for="flexCheckSupervisor">
                                            @localizer["Supervisores"]
                                        </label>
                                    </div>

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckRevisor">
                                        <input type="text" class="form-control hold-value" value="@localizer["Revisores"]" hidden>
                                        <label class="form-check-label" for="flexCheckRevisor">
                                            @localizer["Todos os Revisores"]
                                        </label>
                                    </div>

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckAdmin">
                                        <input type="text" class="form-control hold-value" value="@localizer["Administradores"]" hidden>
                                        <label class="form-check-label" for="flexCheckAdmin">
                                            @localizer["Todos os Administradores"]
                                        </label>
                                    </div>

                                    <div class="form-check box">
                                        <input class="form-check-input chk-notif-type" type="checkbox" value="" id="flexCheckSuperAdmin">
                                        <input type="text" class="form-control hold-value" value="@localizer["SuperAdmins"]" hidden>
                                        <label class="form-check-label" for="flexCheckSuperAdmin">
                                            @localizer["Todos os SuperAdmins"]
                                        </label>
                                    </div>

                                </div>

                                <br /><br /><br /><br />

                                @localizer["Em:"]
                                <br /><br />
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row">
                                            @* Mercados *@
                                            <div class="col-sm-12">
                                                @if (Model.IsBasic || Model.IsColaborador || Model.IsGerenteLoja || Model.IsSupervisor)
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectMercadoId_not" id="SelectMercadoId_not" class="form-select" asp-items="@Model.Mercados" data-placeholder='@localizer["Selecione um mercado"]' disabled>
                                                            <option value="0">@localizer["Todos os mercados"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectMercadoId_not">@localizer["Mercado"]</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectMercadoId_not" id="SelectMercadoId_not" class="form-select" asp-items="@Model.Mercados" data-placeholder='@localizer["Selecione um mercado"]'>
                                                            <option value="0">@localizer["Todos os mercados"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectMercadoId_not">@localizer["Mercado"]</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <div class="row">
                                            @* Empresas *@
                                            <div class="col-sm-12">
                                                @if (Model.IsBasic || Model.IsColaborador || Model.IsGerenteLoja || Model.IsSupervisor)
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectEmpresaId_not" id="SelectEmpresaId_not" class="form-select" asp-items="@Model.Empresas" data-placeholder='@localizer["Selecione uma empresa"]' disabled>
                                                            <option value="0">@localizer["Todas as empresas"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectEmpresaId_not">@localizer["Empresa"]</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectEmpresaId_not" id="SelectEmpresaId_not" class="form-select" asp-items="@Model.Empresas" data-placeholder='@localizer["Selecione uma empresa"]'>
                                                            <option value="0">@localizer["Todas as empresas"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectEmpresaId_not">@localizer["Empresa"]</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row">
                                            @* Agrupamentos *@
                                            <div class="col-sm-12">
                                                @if (Model.IsBasic || Model.IsColaborador || Model.IsGerenteLoja || Model.IsSupervisor)
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectGrupolojaId_not" id="SelectGrupolojaId_not" class="form-select" asp-items="@Model.Gruposlojas" data-placeholder='@localizer["Selecione um agrupamento"]' disabled>
                                                            <option value="0">@localizer["Todos os agrupamentos"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectGrupolojaId_not">@localizer["Agrupamento"]</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectGrupolojaId_not" id="SelectGrupolojaId_not" class="form-select" asp-items="@Model.Gruposlojas" data-placeholder='@localizer["Selecione um agrupamento"]'>
                                                            <option value="0">@localizer["Todos os agrupamentos"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectGrupolojaId_not">@localizer["Agrupamento"]</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        <div class="row">
                                            @* Lojas *@
                                            <div class="col-sm-12">
                                                @if (Model.IsBasic || Model.IsColaborador || Model.IsGerenteLoja)
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectLojaId_not" id="SelectLojaId_not" class="form-select" asp-items="@Model.Lojas" data-placeholder='@localizer["Selecione uma loja"]' disabled>
                                                            <option value="0">@localizer["Todas as lojas"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectLojaId_not">@localizer["Loja"]</label>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="form-floating mb-3">
                                                        <select name="SelectLojaId_not" id="SelectLojaId_not" class="form-select" asp-items="@Model.Lojas" data-placeholder='@localizer["Selecione uma loja"]'>
                                                            <option value="0">@localizer["Todas as lojas"]</option>
                                                        </select>
                                                        <label class="col-form-label label-select" for="SelectLojaId_not">@localizer["Loja"]</label>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <button id="addUserGroup" type="button" class="btn btn-primary">
                                    <span class="bi bi-person-fill-add"></span>
                                </button>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6"></div>
                <input id="ToUserGroups" name="ToUserGroups" type="text" asp-for=ToUserGroups class="form-control" hidden>
                <input id="ToUserIds" name="ToUserIds" type="text" asp-for="ToUserIds" class="form-control" hidden />
            </div>

        </card-header>
        <card-body>
            <div class="row mt-3">
                <div class="col-md-12">
                    <div class="form-floating mt-3">
                        <input id="Subject" name="Subject" type="text" class="form-control" asp-for="Subject" />
                        <label class="col-form-label" for="Subject">@localizer["Assunto"]</label>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-floating mt-3">
                        <textarea id="Text" name="Text" type="Text" class="form-control" asp-for="Text" style="height: 150px;"></textarea>
                        <label class="col-form-label" for="Text">@localizer["Mensagem"]</label>
                    </div>
                </div>
            </div>
            <br />
        </card-body>
        <card-footer>
            <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
                @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Notifications.Create)).Result.Succeeded)
                {
                    <button type="submit" class="btn btn-success">@localizer["Enviar"]</button>
                }
                <button type="button" class="btn btn-secondary close-button" data-bs-dismiss="modal">@localizer["Cancelar"]</button>
            </div>
        </card-footer>
    </card>

</form>


<script>

    function formatToUser(toUser) {
            
            //str = JSON.stringify(toUser, null, 4); // (Optional) beautiful indented output.
            //console.log("toUser: " + str); // Logs output to dev tools console.
            
            if (toUser.id == 0) {
                return `
                    <div class="my-2 px-3">
                        <p class="selectUser">${toUser.text}</p>
                    </<div>
                `;
            }
            if (!toUser.id) {
                return `
                    <div class="my-3 px-3">
                            <p class="email">@localizer["Por favor aguarde ..."]</p>
                    </<div>
                `;
            }

            let imagem = "";
            if (toUser.profilePicture != null && toUser.profilePicture.length > 0)
            { 
                imagem = `<img class="rounded-circle" style="display:block; width:100%; max-height: 32px; max-width: 32px;" src="data:image/*;base64,${toUser.profilePicture}">`;
            }
            else
            {
                imagem = `<img class="rounded-circle" style="display:block; width:100%; height:auto; max-width: 32px;" src="/images/default-user.png">`;
            } 
            
            let email = toUser.email ?? "";
            let firstName = toUser.firstName ?? "";
            let lastName = toUser.lastName ?? "";
            let roleName = toUser.roleName ?? "";
            let local = toUser.local ?? "";

            return `
                <div class="d-inline-flex flex-row border border-2 border-primary rounded">
                    <div class="ps-3 my-3">
                        ${imagem}
                    </div>

                        <div class="my-1 px-3">
                                <p class="email py-0 m-0">${email}</p>
                                <div class="person">
                                        <p class="m-0">${firstName} ${lastName}</p>
                                </div>
                                <p class="designation m-0">${roleName} ${local}</p>
                        </<div>

                </div>
            `;

        };

    function LoadGrupolojaSelect_not(empId) {
        //alert("Empresa changed = " + empId);

        var _empresaId = empId;
        var _url = "/Business/Grupoloja/LoadGruposlojas?empresaId=_empresaId";
        var formData = new FormData();
        formData.append("empresaId", _empresaId);

        $.ajax(
            {
                type: "POST",
                url: _url,
                processData: false,
                contentType: false,
                data: formData,
                dataType: 'json',
                success: function (data) {
                    let _list = JSON.parse(data);
                    $('#SelectGrupolojaId_not').find('option').remove();
                    let option = document.createElement('option');
                    $(option).val(0).text('@localizer["Todos os agrupamentos"]');
                    $(option).appendTo("#SelectGrupolojaId_not");
                    $(_list.gruposlojasList).each(function () {
                        let option = document.createElement('option');
                        $(option).val(this.Value).text(this.Text);
                        $(option).appendTo("#SelectGrupolojaId_not");
                    });
                    $("#GrupolojaIdNot").val($("#SelectGrupolojaId_not").val());
                    LoadLojaSelect_not($("#SelectGrupolojaId_not").val());
                },
                error: function () {
                    alert("Error occurs");
                }
            }
        );
    };

    function LoadLojaSelect_not(grupoId) {
        //alert("Grupoloja changed = " + grupoId);

        var _grupolojaId = grupoId;
        var _url = "/Business/Loja/LoadLojasInGrupoloja?grupolojaId=_grupolojaId";
        var formData = new FormData();
        formData.append("grupolojaId", _grupolojaId);

        $.ajax(
            {
                type: "POST",
                url: _url,
                processData: false,
                contentType: false,
                data: formData,
                dataType: 'json',
                success: function (data) {
                    let _list = JSON.parse(data);
                    $('#SelectLojaId_not').find('option').remove();
                    let option = document.createElement('option');
                    $(option).val(0).text('@localizer["Todas as lojas"]');
                    $(option).appendTo("#SelectLojaId_not");
                    $(_list.lojasList).each(function () {
                        let option = document.createElement('option');
                        $(option).val(this.Value).text(this.Text);
                        $(option).appendTo("#SelectLojaId_not");
                    });
                    $("#LojaIdNot").val($("#SelectLojaId_not").val());
                },
                error: function () {
                    alert("Error occurs");
                }
            }
        );

    };

    function LoadLojaSelectFromMercado_not(mercadoId) {
        //alert("Mercado changed = " + mercadoId);

        var _mercadoId = mercadoId;
        var _url = "/Business/Loja/LoadLojasInMercado?mercadoId=_mercadoId";
        var formData = new FormData();
        formData.append("mercadoId", _mercadoId);

        $.ajax(
            {
                type: "POST",
                url: _url,
                processData: false,
                contentType: false,
                data: formData,
                dataType: 'json',
                success: function (data) {
                    let _list = JSON.parse(data);
                    $('#SelectLojaId_not').find('option').remove();
                    let option = document.createElement('option');
                    $(option).val(0).text('@localizer["Todas as lojas"]');
                    $(option).appendTo("#SelectLojaId_not");
                    $(_list.lojasList).each(function () {
                        let option = document.createElement('option');
                        $(option).val(this.Value).text(this.Text);
                        $(option).appendTo("#SelectLojaId_not");
                    });
                    $("#LojaIdNot").val($("#SelectLojaId_not").val());
                },
                error: function () {
                    alert("Error occurs");
                }
            }
        );

    };

    $(document).ready(function () {


        //------------------------- Inicializar plugins select2 ----------------------------


        $("#toUserSelect").select2({
            theme: 'bootstrap-5',
            width: '100%',
            dropdownParent: $('#toUserDropDown'),
            ajax: {
                type: 'get',
                url: '/Admin/User/OnGetListAllUsers',
                contentType: "application/json; charset=utf-8",
                delay: 250,
                cache: true,
                data: function (params) {
                    var query =
                    {
                        term: params.term || "",
                        page: params.page || 1
                    };
                    return query;
                },
                processResults: function (data, params) {

                    //str = JSON.stringify(data, null, 4); // (Optional) beautiful indented output.
                    //console.log(str); // Logs output to dev tools console.

                    params.page = params.page || 1;
                    return {
                        results: $.map(data.results, function (item) {
                            //str2 = JSON.stringify(item, null, 4); // (Optional) beautiful indented output.
                            //console.log("user item: " + str2); // Logs output to dev tools console.
                            return item;
                        }),
                        pagination: {
                            more: data.pagination.more // verificar se existem mais pages
                        }
                    };
                }
            },
            templateResult: formatToUser,
            templateSelection: formatToUser,
            escapeMarkup: function (m) {
                return m;
            }
        });

        $('#SelectMercadoId_not').select2({
            theme: 'bootstrap-5',
            width: '100%',
            escapeMarkup: function (m) {
                return m;
            }
        });

        $('#SelectEmpresaId_not').select2({
            theme: 'bootstrap-5',
            width: '100%',
            escapeMarkup: function (m) {
                return m;
            }
        });

        $('#SelectGrupolojaId_not').select2({
            theme: 'bootstrap-5',
            width: '100%',
            escapeMarkup: function (m) {
                return m;
            }
        });

        $('#SelectLojaId_not').select2({
            theme: 'bootstrap-5',
            width: '100%',
            escapeMarkup: function (m) {
                return m;
            }
        });


        //------------------------- Event Listeners ----------------------------


        $("#SelectMercadoId_not").on("change", function () {
            $("#MercadoIdNot").val(this.value);
            if (this.value > 0) {
                // selecionar loja atraves do Mercado
                $('#SelectEmpresaId_not').val(0);
                $('#SelectGrupolojaId_not').find('option').remove();
                $('#SelectLojaId_not').find('option').remove();
                $('#SelectEmpresaId_not').prop('disabled', true);
                $('#SelectGrupolojaId_not').prop('disabled', true);
                LoadLojaSelectFromMercado_not(this.value);
            }
            else {
                // selecionar loja atraves da Empresa
                $('#SelectEmpresaId_not').prop('disabled', false);
                $('#SelectGrupolojaId_not').prop('disabled', false);
                console.log("MercadoIdNot=0, selecionar loja atraves da Empresa, #EmpresaIdNot=" + $('#EmpresaIdNot').val());
                LoadGrupolojaSelect_not($('#EmpresaIdNot').val());
            }
        });

        $("#SelectEmpresaId_not").on("change", function () {
            $("#EmpresaIdNot").val(this.value);
            if (this.value > 0) {
                // selecionar loja atraves da Empresa
                $('#SelectMercadoId_not').prop('disabled', true);
                LoadGrupolojaSelect_not(this.value);
            }
            else {
                // selecionar loja atraves do Mercado
                $('#SelectEmpresaId_not').val(0);
                $('#SelectGrupolojaId_not').find('option').remove();
                $('#SelectLojaId_not').find('option').remove();
                $('#SelectMercadoId_not').prop('disabled', false);
            }
        });

        $("#SelectGrupolojaId_not").on("change", function () {
            $("#GrupolojaIdNot").val(this.value);
            LoadLojaSelect_not(this.value);
        });

        $("#SelectLojaId_not").on("change", function () {
            $("#LojaIdNot").val(this.value);
        });

        $('#addUser').on('click', function () {

            let opt = $('#toUserSelect').select2('data');
            if (opt.length == 0) { return; }

            str = JSON.stringify(opt, null, 4); // (Optional) beautiful indented output.
            console.log("toUserSelect data: " + str); // Logs output to dev tools console.

            let ul = document.getElementById("targetUsers");
            let li = document.createElement('li');
            li.setAttribute("class", "liToUser");
            let text = document.createTextNode(opt[0].email + ';');
            let input = document.createElement("input");
            input.setAttribute("type", "hidden");
            input.setAttribute("class", "toUserId");
            input.setAttribute("value", opt[0].id);

            //append to form
            //document.getElementById("chells").appendChild(input);
            let deleteBtn = document.createElement('button');
            deleteBtn.setAttribute("class", "btn btndelete py-0");
            let deleteIcon = document.createElement("i");
            deleteIcon.setAttribute("class", "fa fa-times");
            deleteIcon.setAttribute("style", "font-size: 1em; color: red;");
            deleteBtn.appendChild(deleteIcon);

            deleteBtn.addEventListener('click', function () {
                this.parentElement.remove();
            })

            li.appendChild(text);
            li.appendChild(input);
            li.appendChild(deleteBtn);
            ul.appendChild(li);

            // atualizar toUserId
            let toUserIds = document.getElementsByClassName("toUserId");
            let toUserIdsValue = "";
            for (let i = 0; i < toUserIds.length; i++) {
                toUserIdsValue += toUserIds[i].value + ";";
            }
            document.getElementById("ToUserIds").value = toUserIdsValue;
            console.log("toUserIds = " + $('#ToUserIds').val());

            // limpar selection
            $('#toUserSelect').empty().trigger('change');
        }); 

        $('#addUserGroup').on('click', function () {
            console.log('AddUserGroup clicked');

            let ul = document.getElementById("targetUsers");

            let checkedVals = $('.chk-notif-type:checkbox:checked').map(function () {
                let hValue = $(this).siblings('.hold-value').eq(0).val();
                return hValue;
            }).get();

            let mData = $('#SelectMercadoId_not').select2('data')
            let eData = $('#SelectEmpresaId_not').select2('data')
            let gData = $('#SelectGrupolojaId_not').select2('data')
            let lData = $('#SelectLojaId_not').select2('data')
            //alert(data[0].text);
            //alert(data[0].id);

            let atString = '';
            let mId = 0;
            let eId = 0;
            let gId = 0;
            let lId = 0;

            if (mData.length > 0 && mData[0].id > 0) { atString = mData[0].text; mId = mData[0].id }
            if (eData.length > 0 && eData[0].id > 0) { atString = eData[0].text; eId = eData[0].id }
            if (gData.length > 0 && gData[0].id > 0) { atString = gData[0].text; gId = gData[0].id }
            if (lData.length > 0 && lData[0].id > 0) { atString = lData[0].text; lId = lData[0].id }

            // atualizar targetUsers
            for (let i = 0; i < checkedVals.length; i++) {
                let li = document.createElement('li');
                li.setAttribute("class", "liToUserGroup");
                let text = document.createTextNode(checkedVals[i] + '@@' + atString + ';');
                let input = document.createElement("input");
                input.setAttribute("type", "hidden");
                input.setAttribute("class", "toUserGroup");
                // input.setAttribute("value", checkedVals[i] + "*" + mData[0].id + "*" + eData[0].id + "*" + gData[0].id + "*" + lData[0].id);
                input.setAttribute("value", checkedVals[i] + "*" + mId + "*" + eId + "*" + gId + "*" + lId);



                //append to form
                //document.getElementById("chells").appendChild(input);
                let deleteBtn = document.createElement('button');
                deleteBtn.setAttribute("class", "btn btndelete py-0");
                let deleteIcon = document.createElement("i");
                deleteIcon.setAttribute("class", "fa fa-times");
                deleteIcon.setAttribute("style", "font-size: 1em; color: red;");
                deleteBtn.appendChild(deleteIcon);

                deleteBtn.addEventListener('click', function () {
                    this.parentElement.remove();
                })

                li.appendChild(text);
                li.appendChild(input);
                li.appendChild(deleteBtn);
                ul.appendChild(li);
            };

            // atualizar ToUserGroups
            let toUserGroups = document.getElementsByClassName("toUserGroup");
            let toUserGroupsValue = "";
            for (let i = 0; i < toUserGroups.length; i++) {
                toUserGroupsValue += toUserGroups[i].value + ";";
            }
            document.getElementById("ToUserGroups").value = toUserGroupsValue;
            console.log("ToUserGroups = " + $('#ToUserGroups').val());

            //limpar checkboxes
            $('.chk-notif-type').prop('checked', false);

        });

    });
</script>
