@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using Core.Constants
@using LVLgroupApp.Areas.Notification.Models.Notification
@model ViewNotificationViewModel


<style>
    .to-container {
        height: 80px;
    }
</style>


<card id="card-sendnotification">
    <card-header>

        <div class="row">
            <div class="col-sm-1 text-left">@localizer["De:"]</div>
            <div class="col-sm-5">
                <div class="d-inline-flex flex-row border border-2 border-primary rounded">
                    <div class="ps-3">
                        @if (@Model.FromUser.ProfilePicture != null && Model.FromUser.ProfilePicture.Length > 0)
                        {
                            <img class="img-profile rounded-circle my-2" style="height: 60px;width:60px;object-fit: cover;" src="data:image/*;base64,@(Convert.ToBase64String(@Model.FromUser.ProfilePicture))">
                        }
                        else
                        {
                            <img class="img-profile rounded-circle my-2" style="height: 60px;width:60px;object-fit: cover;" src="~/images/default-user.png">
                        }
                    </div>
                    <div>
                        <div class="my-1 px-3">
                            <p class="email py-0 m-0">@Model.FromUser.Email</p>
                            <div class="person">
                                <p class="m-0">@Model.FromUser.Name</p>
                            </div>
                            <p class="designation m-0">@string.Concat(Model.FromUser.RoleName, " ", Model.FromUser.Local)</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-1 text-left">@localizer["Para:"]</div>
            <div class="col-sm-5">

                <div class="btn-group w-100 to-container border border-2 border-primary rounded overflow-y-auto overflow-x-hidden">
                    <ul id="targetUsers" class="w-100 h-100 mb-0 text-start"></ul>
                </div>

            </div>
            <input id="ToUserIds" name="ToUserIds" type="text" class="form-control" asp-for="ToUserIds" hidden />
        </div>

    </card-header>
    <card-body>
        <div class="row">
            <div class="col-md-12">
                <div class="form-floating mt-3">
                    <input id="Subject" name="Subject" type="text" class="form-control" asp-for="Subject" readonly />
                    <label class="col-form-label" for="Notification_Subject">@localizer["Assunto"]</label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-floating mt-3">
                    <textarea id="Text" name="Text" type="Text" class="form-control" asp-for="Text" style="height: 200px;" readonly></textarea>
                    <label class="col-form-label" for="Text">@localizer["Mensagem"]</label>
                </div>
            </div>
        </div>
        <br />
    </card-body>
    <card-footer>
        <div class="form-group justify-content-between" style="margin-bottom: 0px !important">
            <button type="button" class="btn btn-secondary close-button" data-bs-dismiss="modal">@localizer["Cancelar"]</button>
        </div>
    </card-footer>
</card>



<script>
    $(document).ready(function () {
        
        let toUsers = @Html.Raw(Json.Serialize(Model.ToUsers));
        let ul = document.getElementById("targetUsers");

        console.log(toUsers);

        for (let i = 0; i < toUsers.length; i++) {

            // adicionar <li> ao <ul> em targetUsers
            let li = document.createElement('li');
            let text = document.createTextNode(toUsers[i].email);
            li.appendChild(text);
            ul.appendChild(li);
        }
    });
</script>