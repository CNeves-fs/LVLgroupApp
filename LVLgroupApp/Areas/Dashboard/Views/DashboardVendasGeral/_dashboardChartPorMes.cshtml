@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using Core.Constants
@using LVLgroupApp.Areas.Dashboard.Models.DashboardVendasGeral
@model ChartMensalViewModel



<link href="~/css/dashboard.css" rel="stylesheet">




<div class="row pt-lg-5">
    <div class="col-lg-9 col-12">
        <!--Div that will hold the bars chart-->
        <div id="chart_vendas_mes_div"></div>
    </div>
</div>


<script type="text/javascript">
    
    var data;
    var chart;

    // Load the Visualization API and the piechart package.
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.load('current', { 'packages': ['bar'] });

    // Set a callback to run when the Google Visualization API is loaded.
    // google.charts.setOnLoadCallback(drawDonutChart);
    google.charts.setOnLoadCallback(drawBarsChart);


    // Callback that creates and populates a data table,
    // instantiates the bars chart, passes in the data and
    // draws it.
    function drawBarsChart() {

        // Create our data table.
        dataBars = new google.visualization.DataTable();

        // Add columns
        var columns = @Html.Raw(Json.Serialize(Model.VendasMensaisColumnsList))
        console.log(columns);
        for (var i = 0; i < columns.length; i++) {
            //add uma coluna por cada ano
            dataBars.addColumn(columns[i].columnType, columns[i].columnName);
        }

        // Add rows
        var rows = @Html.Raw(Json.Serialize(Model.VendasMensaisRowsList))
        console.log(rows);
        for (var i = 0; i < rows.length; i++) {
            // add uma row por cada mes
            const newFirstElement = rows[i].label;
            const dataRow = [newFirstElement].concat(rows[i].valuesList);

            dataBars.addRow(dataRow);
        }

        var optionsBars = {
            'title': @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Title)),
            'subtitle': @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Subtitle)),
            'height': '400',
            // 'explorer': {
            //     'axis': 'horizontal'
            // },
            'legend': { 
                'position': 'bottom'
            },
            'colors': ['red', '#1763AD', 'purple'],
            'seriesType': 'bars',
            'series': {2: {type: 'line'}},
            'bars': 'vertical' // Required for Material Bar Charts.
        };

        // Instantiate and draw bar chart, passing in some options.
        chart_bars = new google.visualization.ComboChart(document.getElementById('chart_vendas_mes_div'));
        google.visualization.events.addListener(chart_bars, 'select', selectHandler);
        chart_bars.draw(dataBars, google.charts.Bar.convertOptions(optionsBars));
    }

    function selectHandler() {
        //var selectedItem = chart_total.getSelection()[0];
        //var value = data.getValue(selectedItem.row, 0);
        //alert('The user selected ' + value);
    }

</script>
