<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A edição da reclamação foi cancelada." xml:space="preserve">
    <value>Editing of the claim has been cancelled.</value>
  </data>
  <data name="Agrupamento de lojas" xml:space="preserve">
    <value>Group of stores</value>
  </data>
  <data name="Aprovação" xml:space="preserve">
    <value>Approval</value>
  </data>
  <data name="Artigo" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="Artigo1" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="Cancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cliente" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="Cor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Criar artigo" xml:space="preserve">
    <value>Create article</value>
  </data>
  <data name="Criar nova reclamação" xml:space="preserve">
    <value>Create new claim</value>
  </data>
  <data name="Código" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="d-m-Y" xml:space="preserve">
    <value>m-d-Y</value>
  </data>
  <data name="d-m-Y1" xml:space="preserve">
    <value>m-d-Y</value>
  </data>
  <data name="d-m-Y2" xml:space="preserve">
    <value>Y-m-d</value>
  </data>
  <data name="Data da compra" xml:space="preserve">
    <value>Date of purchase</value>
  </data>
  <data name="Data da reclamação" xml:space="preserve">
    <value>Claim date</value>
  </data>
  <data name="Data entrada no Portal" xml:space="preserve">
    <value>Entry date on the Portal</value>
  </data>
  <data name="Data fecho" xml:space="preserve">
    <value>Closing date</value>
  </data>
  <data name="Data limite" xml:space="preserve">
    <value>Time limit</value>
  </data>
  <data name="Data reclamação" xml:space="preserve">
    <value>Claim date</value>
  </data>
  <data name="dd/mm/yy" xml:space="preserve">
    <value>mm/dd/yy</value>
  </data>
  <data name="dd/mm/yy1" xml:space="preserve">
    <value>mm/dd/yy</value>
  </data>
  <data name="dd/MM/yyyy" xml:space="preserve">
    <value>MM/dd/yyyy</value>
  </data>
  <data name="Decisão final" xml:space="preserve">
    <value>Final decision</value>
  </data>
  <data name="Defeito do artigo" xml:space="preserve">
    <value>Article defect</value>
  </data>
  <data name="Devolução do dinheiro" xml:space="preserve">
    <value>Cash return</value>
  </data>
  <data name="dias após compra!" xml:space="preserve">
    <value>days after purchase!</value>
  </data>
  <data name="dias após compra!1" xml:space="preserve">
    <value> days after purchase!</value>
  </data>
  <data name="Editar formulário da reclamação." xml:space="preserve">
    <value>Edit claim form.</value>
  </data>
  <data name="Editar reclamação" xml:space="preserve">
    <value>Edit claim</value>
  </data>
  <data name="Empresa" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Empresa1" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Fecho em loja" xml:space="preserve">
    <value>Close in store</value>
  </data>
  <data name="Fotos" xml:space="preserve">
    <value>Photos</value>
  </data>
  <data name="Género" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Loja" xml:space="preserve">
    <value>Store</value>
  </data>
  <data name="MANTER STATUS DA RECLAMAÇÃO" xml:space="preserve">
    <value>KEEP CLAIM STATUS</value>
  </data>
  <data name="meses após compra!" xml:space="preserve">
    <value>months after purchase!</value>
  </data>
  <data name="meses após compra!1" xml:space="preserve">
    <value> months after purchase!</value>
  </data>
  <data name="messages_pt.js" xml:space="preserve">
    <value>messages_en.js</value>
  </data>
  <data name="Nota de crédito" xml:space="preserve">
    <value>Credit note</value>
  </data>
  <data name="Opinião do cliente" xml:space="preserve">
    <value>Client opinion</value>
  </data>
  <data name="Parecer de administrador" xml:space="preserve">
    <value>Administrator opinion</value>
  </data>
  <data name="Parecer de colaborador" xml:space="preserve">
    <value>Collaborator opinion</value>
  </data>
  <data name="Parecer de gerente de loja" xml:space="preserve">
    <value>Store manager opinion</value>
  </data>
  <data name="Parecer de revisor" xml:space="preserve">
    <value>Reviewer opinion</value>
  </data>
  <data name="Parecer de supervisor" xml:space="preserve">
    <value>Supervisor opinion</value>
  </data>
  <data name="Parecer técnico" xml:space="preserve">
    <value>Technical opinion</value>
  </data>
  <data name="Pele" xml:space="preserve">
    <value>Leather</value>
  </data>
  <data name="Prencher formulário da nova reclamação." xml:space="preserve">
    <value>Fill out the new claim form.</value>
  </data>
  <data name="pt" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="pt1" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="pt2" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="Reclamação" xml:space="preserve">
    <value>Claim</value>
  </data>
  <data name="Rejeitada" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Reparação do artigo" xml:space="preserve">
    <value>Article repair</value>
  </data>
  <data name="Responsável" xml:space="preserve">
    <value>Responsible</value>
  </data>
  <data name="Salvar reclamação" xml:space="preserve">
    <value>Save claim</value>
  </data>
  <data name="Selecione status seguinte" xml:space="preserve">
    <value>Select next status</value>
  </data>
  <data name="Selecione um agrupamento de lojas" xml:space="preserve">
    <value>Select a store group</value>
  </data>
  <data name="Selecione um artigo" xml:space="preserve">
    <value>Select an article</value>
  </data>
  <data name="Selecione um tamanho" xml:space="preserve">
    <value>Select a size</value>
  </data>
  <data name="Selecione uma empresa" xml:space="preserve">
    <value>Select a company</value>
  </data>
  <data name="Selecione uma loja" xml:space="preserve">
    <value>Select a store</value>
  </data>
  <data name="Status seguinte" xml:space="preserve">
    <value>Next status</value>
  </data>
  <data name="Tamanho" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Troca de artigo" xml:space="preserve">
    <value>Item exchange</value>
  </data>
  <data name="Último contacto" xml:space="preserve">
    <value>Last contact</value>
  </data>
</root>